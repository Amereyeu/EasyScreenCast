#################

gst init & res

#################

//links
https://developer.gnome.org/gstreamer/stable/
https://developer.gnome.org/gst-plugins-libs/stable/
https://developer.gnome.org/gstreamer-libs/stable/
http://www.roojs.org/seed/gir-1.2-gtk-3.0/seed/Gst.html
http://www.roojs.org/seed/gir-1.2-gtk-3.0/seed/GstVideo.html
http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer-plugins/html/gstreamer-plugins-queue2.html
http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer-plugins/html/gstreamer-plugins-queue.html
http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer-plugins/html/gstreamer-plugins-tee.html
http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gst-plugins-bad-plugins/html/gst-plugins-bad-plugins-compositor.html



//videotest patner
gst-launch-1.0 videotestsrc pattern=snow ! ximagesink
gst-launch-1.0 videotestsrc ! ximagesink
gst-launch-1.0 -v videotestsrc pattern=snow ! video/x-raw,width=1280,height=720 ! autovideosink
gst-launch-1.0 -v videotestsrc  ! video/x-raw,width=820,height=640 ! ximagesink
gst-launch-1.0 -v videotestsrc ! video/x-raw,format=BGRx,width=640, height=360 ! ximagesink





//list of video input
for VIDEO_DEVICE in /dev/video* ; do echo ; echo ; echo $VIDEO_DEVICE ; echo ; v4l2-ctl --device=$VIDEO_DEVICE --list-inputs ; done


//list of setting of video of webcam
gst-launch-0.10 --gst-debug=v4l2src:3 v4l2src device=/dev/video0 ! fakesink 2>&1 | grep 'probed caps:'



//list caps webcam
probed caps: video/x-raw-yuv, format=(fourcc)YUY2, width=(int)1600, height=(int)1200, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 5/1 }; 
video/x-raw-yuv, format=(fourcc)YUY2, width=(int)1280, height=(int)1024, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 15/2 }; 
video/x-raw-yuv, format=(fourcc)YUY2, width=(int)1024, height=(int)768, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 12/1 }; 
video/x-raw-yuv, format=(fourcc)YUY2, width=(int)800, height=(int)600, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 15/1 }; 
video/x-raw-yuv, format=(fourcc)YUY2, width=(int)640, height=(int)480, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 30/1 }; 
video/x-raw-yuv, format=(fourcc)YUY2, width=(int)352, height=(int)288, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 30/1 }; 
video/x-raw-yuv, format=(fourcc)YUY2, width=(int)320, height=(int)240, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 30/1 }; 
video/x-raw-yuv, format=(fourcc)YUY2, width=(int)176, height=(int)144, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 30/1 }; 
video/x-raw-yuv, format=(fourcc)YUY2, width=(int)160, height=(int)120, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 30/1 }; 
image/jpeg, width=(int)1600, height=(int)1200, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 12/1 }; 
image/jpeg, width=(int)1280, height=(int)1024, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 15/1 }; 
image/jpeg, width=(int)1024, height=(int)768, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 15/1 }; 
image/jpeg, width=(int)800, height=(int)600, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 15/1 }; 
image/jpeg, width=(int)640, height=(int)480, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 30/1 }; 
image/jpeg, width=(int)352, height=(int)288, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 30/1 }; 
image/jpeg, width=(int)320, height=(int)240, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 30/1 }; 
image/jpeg, width=(int)176, height=(int)144, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 30/1 }; 
image/jpeg, width=(int)160, height=(int)120, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 30/1 }; 
video/x-raw-yuv, format=(fourcc)I420, width=(int)1600, height=(int)1200, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 12/1 }; 
video/x-raw-yuv, format=(fourcc)I420, width=(int)1280, height=(int)1024, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 15/1 }; 
video/x-raw-yuv, format=(fourcc)I420, width=(int)1024, height=(int)768, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 15/1 }; 
video/x-raw-yuv, format=(fourcc)I420, width=(int)800, height=(int)600, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 15/1 }; 
video/x-raw-yuv, format=(fourcc)I420, width=(int)640, height=(int)480, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 30/1 }; 
video/x-raw-yuv, format=(fourcc)I420, width=(int)352, height=(int)288, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 30/1 }; 
video/x-raw-yuv, format=(fourcc)I420, width=(int)320, height=(int)240, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 30/1 }; 
video/x-raw-yuv, format=(fourcc)I420, width=(int)176, height=(int)144, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 30/1 }; 
video/x-raw-yuv, format=(fourcc)I420, width=(int)160, height=(int)120, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 30/1 }; 
video/x-raw-yuv, format=(fourcc)YV12, width=(int)1600, height=(int)1200, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 12/1 }; 
video/x-raw-yuv, format=(fourcc)YV12, width=(int)1280, height=(int)1024, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 15/1 }; 
video/x-raw-yuv, format=(fourcc)YV12, width=(int)1024, height=(int)768, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 15/1 }; 
video/x-raw-yuv, format=(fourcc)YV12, width=(int)800, height=(int)600, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 15/1 }; 
video/x-raw-yuv, format=(fourcc)YV12, width=(int)640, height=(int)480, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 30/1 }; 
video/x-raw-yuv, format=(fourcc)YV12, width=(int)352, height=(int)288, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 30/1 }; 
video/x-raw-yuv, format=(fourcc)YV12, width=(int)320, height=(int)240, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 30/1 }; 
video/x-raw-yuv, format=(fourcc)YV12, width=(int)176, height=(int)144, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 30/1 }; 
video/x-raw-yuv, format=(fourcc)YV12, width=(int)160, height=(int)120, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 30/1 }; 
video/x-raw-rgb, bpp=(int)24, depth=(int)24, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680, endianness=(int)4321, width=(int)1600, height=(int)1200, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 12/1 }; 
video/x-raw-rgb, bpp=(int)24, depth=(int)24, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680, endianness=(int)4321, width=(int)1280, height=(int)1024, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 15/1 }; 
video/x-raw-rgb, bpp=(int)24, depth=(int)24, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680, endianness=(int)4321, width=(int)1024, height=(int)768, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 15/1 }; 
video/x-raw-rgb, bpp=(int)24, depth=(int)24, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680, endianness=(int)4321, width=(int)800, height=(int)600, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 15/1 }; 
video/x-raw-rgb, bpp=(int)24, depth=(int)24, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680, endianness=(int)4321, width=(int)640, height=(int)480, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 30/1 }; 
video/x-raw-rgb, bpp=(int)24, depth=(int)24, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680, endianness=(int)4321, width=(int)352, height=(int)288, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 30/1 }; 
video/x-raw-rgb, bpp=(int)24, depth=(int)24, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680, endianness=(int)4321, width=(int)320, height=(int)240, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 30/1 }; 
video/x-raw-rgb, bpp=(int)24, depth=(int)24, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680, endianness=(int)4321, width=(int)176, height=(int)144, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 30/1 }; 
video/x-raw-rgb, bpp=(int)24, depth=(int)24, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680, endianness=(int)4321, width=(int)160, height=(int)120, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 30/1 }; 
video/x-raw-rgb, bpp=(int)24, depth=(int)24, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, endianness=(int)4321, width=(int)1600, height=(int)1200, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 12/1 }; 
video/x-raw-rgb, bpp=(int)24, depth=(int)24, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, endianness=(int)4321, width=(int)1280, height=(int)1024, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 15/1 }; 
video/x-raw-rgb, bpp=(int)24, depth=(int)24, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, endianness=(int)4321, width=(int)1024, height=(int)768, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 15/1 }; 
video/x-raw-rgb, bpp=(int)24, depth=(int)24, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, endianness=(int)4321, width=(int)800, height=(int)600, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 15/1 }; 
video/x-raw-rgb, bpp=(int)24, depth=(int)24, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, endianness=(int)4321, width=(int)640, height=(int)480, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 30/1 }; 
video/x-raw-rgb, bpp=(int)24, depth=(int)24, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, endianness=(int)4321, width=(int)352, height=(int)288, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 30/1 }; 
video/x-raw-rgb, bpp=(int)24, depth=(int)24, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, endianness=(int)4321, width=(int)320, height=(int)240, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 30/1 }; 
video/x-raw-rgb, bpp=(int)24, depth=(int)24, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, endianness=(int)4321, width=(int)176, height=(int)144, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 30/1 }; 
video/x-raw-rgb, bpp=(int)24, depth=(int)24, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, endianness=(int)4321, width=(int)160, height=(int)120, interlaced=(boolean)false, pixel-aspect-ratio=(fraction)1/1, framerate=(fraction){ 30/1 }


@@@ extesion pipeline @@@
queue \
! videorate \
! vp9enc min_quantizer=13 max_quantizer=13 cpu-used=5 deadline=1000000 threads=%T \
! queue \
! mux. pulsesrc \
! queue \
! audioconvert \
! vorbisenc \
! queue \
! mux. webmmux name=mux 



#################

gst 1.0

#################

//test
gst-launch-1.0 -v videotestsrc pattern="snow"  ! video/x-raw,format=YUY2 ! videoconvert ! autovideosink


//pip
gst-launch-1.0  videotestsrc ! video/x-raw,format=AYUV,framerate=5/1,width=320,height=240 ! videomixer name=mix sink_0::alpha=0.7 sink_1::alpha=0.5 ! videoconvert ! xvimagesink videotestsrc pattern=2 ! video/x-raw,format=AYUV,framerate=\(fraction\)10/1,width=100,height=100 ! videobox border-alpha=0 top=-70  bottom=-70 right=-220 ! mix.


//pip2
gst-launch-1.0 videotestsrc pattern=1 ! video/x-raw, framerate=10/1, width=200, height=200 ! videomixer name=mix ! videoconvert ! ximagesink videotestsrc ! video/x-raw, framerate=5/1, width=100, height=100 ! mix.


//pip3
gst-launch-1.0  videotestsrc ! video/x-raw,format=I420, framerate=5/1, width=320, height=240 ! videomixer name=mix ! videoconvert ! ximagesink videotestsrc pattern=1 ! video/x-raw,format =I420, framerate=10/1, width=100, height=100 ! mix.


//pip 4
gst-launch-1.0 videomixer name=mixer sink_1::alpha=0.5 sink_1::xpos=50 sink_1::ypos=50 ! videoconvert ! ximagesink videotestsrc pattern=smpte ! "video/x-raw,format=AYUV,width=800,height=600,framerate=10/1" ! timeoverlay ! queue2 ! mixer. videotestsrc pattern=snow timestamp-offset=3000000000 ! "video/x-raw,format=AYUV,width=640,height=480,framerate=30/1" ! timeoverlay ! queue2 ! mixer. 





//timestamp
gst-launch-1.0 videotestsrc ! timeoverlay font-desc=60px ! xvimagesink




// webcam
gst-launch-1.0 -v v4l2src  ! video/x-raw,format=YUY2,width=640, height=480, interlaced=false, pixel-aspect-ratio=1/1, framerate=30/1 ! videoconvert ! xvimagesink

//webcam into test pattern
gst-launch-1.0 -v videotestsrc ! video/x-raw, format=YUY2, framerate=10/1, width=940, height=600 ! videoconvert ! videomixer name=mix !  xvimagesink  v4l2src ! video/x-raw,format=YUY2,width=640, height=480, interlaced=false, pixel-aspect-ratio=1/1, framerate=30/1 ! videoconvert ! mix.


// webcam to file AVI
gst-launch-1.0 v4l2src do-timestamp=true ! video/x-raw,format=YUY2,width=640, height=480, interlaced=false, pixel-aspect-ratio=1/1, framerate=30/1 ! avimux ! filesink location=test-webcam.avi

// webcam to file WEBM
gst-launch-1.0 --gst-debug=3 \
v4l2src do-timestamp=true ! video/x-raw,format=YUY2,width=640, height=480, interlaced=false, pixel-aspect-ratio=1/1, framerate=30/1 \
! videoconvert ! queue ! videorate ! vp8enc  min_quantizer=10 max_quantizer=10 cpu-used=2 deadline=1000000  threads=2 \
! queue ! mux. pulsesrc \
! queue ! audioconvert ! vorbisenc \
! queue ! mux. webmmux name=mux \
! filesink location=screencast.webm

// test pattern SNOW to file WEBM
gst-launch-1.0 -v videotestsrc pattern="snow"  ! video/x-raw,format=YUY2 !  videoconvert ! queue ! videorate ! vp8enc  min_quantizer=10 max_quantizer=10 cpu-used=2 deadline=1000000  threads=2 ! queue ! mux. pulsesrc ! queue !  audioconvert ! vorbisenc ! queue ! mux. webmmux name=mux ! filesink location=screencastSNOW.webm

// webcam into test pattern to file WEBM
gst-launch-1.0  --gst-debug=3 \
videotestsrc \
! video/x-raw,format=AYUV,framerate=5/1,width=920,height=640 \
! videomixer name=mix \
! videoconvert \
! queue \
! videorate \
! vp8enc  min_quantizer=10 max_quantizer=10 cpu-used=2 deadline=1000000  threads=2 \
! queue \
! mux. pulsesrc \
! queue \
! audioconvert \
! vorbisenc \
! queue \
! mux. webmmux name=mux \
! filesink location=screencast.webm v4l2src do-timestamp=true \
! video/x-raw,format=YUY2,width=640, height=480, interlaced=false, pixel-aspect-ratio=1/1, framerate=30/1 \
! mix.


// webcam into test pattern to file WEBM [fixed position] <- BAD 
gst-launch-1.0  --gst-debug=3 \
videomixer name=mix \
! videoconvert \
! queue \
! videorate \
! vp8enc  min_quantizer=10 max_quantizer=10 cpu-used=2 deadline=1000000  threads=2 \
! queue \
! mux. pulsesrc \
! queue \
! audioconvert \
! vorbisenc \
! queue \
! mux. webmmux name=mux \
! filesink location=screencast.webm videotestsrc \
! video/x-raw,format=AYUV,framerate=5/1,width=920,height=640 \
! mix. v4l2src do-timestamp=true \
! video/x-raw,format=YUY2,width=640, height=480, interlaced=false, pixel-aspect-ratio=1/1, framerate=30/1 \
! videobox border-alpha=0 top=-20 left=-25 \
! mix.

// webcam into screencast to file WEBM [fixed position] <- BAD PERFORMANCE
gst-launch-1.0  --gst-debug=3 \
videomixer name=mix sink_0::alpha=0.7 sink_1::alpha=0.5\
! videoconvert \
! queue \
! videorate \
! vp8enc  min_quantizer=10 max_quantizer=10 cpu-used=2 deadline=1000000  threads=2 \
! queue \
! mux. pulsesrc \
! queue \
! audioconvert \
! vorbisenc \
! queue \
! mux. webmmux name=mux \
! filesink location=screencast.webm ximagesrc \
! mix. v4l2src do-timestamp=true \
! video/x-raw,format=YUY2,width=640, height=480, interlaced=false, pixel-aspect-ratio=1/1, framerate=30/1 \
! videobox border-alpha=0 top=-20 left=-25 \
! mix.



// webcam into screencast to file WEBM [fixed position] <- BAD PERFORMANCE
gst-launch-1.0  --gst-debug=3 \
videomixer name=mix sink_1::alpha=0.5 sink_1::xpos=50 sink_1::ypos=50 \
! videoconvert \
! queue \
! videorate \
! vp8enc  min_quantizer=10 max_quantizer=10 cpu-used=2 deadline=1000000  threads=2 \
! queue \
! mux. pulsesrc \
! queue \
! audioconvert \
! vorbisenc \
! queue \
! mux. webmmux name=mux \
! filesink location=screencast.webm ximagesrc \
! mix. v4l2src do-timestamp=true \
! video/x-raw,format=YUY2,width=640, height=480, interlaced=false, pixel-aspect-ratio=1/1, framerate=30/1 \
! videobox border-alpha=0 top=-20 left=-25 \
! mix.


// webcam into screencast to file WEBM [fixed position] <- COMPOSITOR better performance
gst-launch-1.0  --gst-debug=3 \
compositor name=comp sink_1::alpha=0.5 sink_1::xpos=50 sink_1::ypos=50 \
! videoconvert \
! queue \
! videorate \
! vp8enc  min_quantizer=13 max_quantizer=13 cpu-used=2 deadline=1000000  threads=2 \
! queue \
! mux. pulsesrc \
! queue \
! audioconvert \
! vorbisenc \
! queue \
! mux. webmmux name=mux \
! filesink location=screencast.webm ximagesrc \
! queue \
! comp. v4l2src \
! queue \
! video/x-raw,format=YUY2,width=160, height=120, interlaced=false, pixel-aspect-ratio=1/1, framerate=30/1 \
! videobox border-alpha=0 top=-20 left=-25 \
! comp.


// webcam into screencast to file WEBM <- COMPOSITOR
gst-launch-1.0  --gst-debug=3 \
compositor name=comp \
! videoconvert \
! queue min-threshold-time=10000000000 max-size-time=30000000000 \
! videorate \
! vp8enc  min_quantizer=10 max_quantizer=10 cpu-used=2 deadline=1000000  threads=2 \
! queue min-threshold-time=10000000000 max-size-time=30000000000 \
! mux. pulsesrc \
! queue min-threshold-time=10000000000 max-size-time=30000000000 \
! audioconvert \
! vorbisenc \
! queue min-threshold-time=10000000000 max-size-time=30000000000 \
! mux. webmmux name=mux \
! filesink location=screencast.webm ximagesrc \
! queue min-threshold-time=10000000000 max-size-time=30000000000 \
! comp. v4l2src \
! queue min-threshold-time=10000000000 max-size-time=30000000000 \
! video/x-raw,format=YUY2,width=640, height=480, interlaced=false, pixel-aspect-ratio=1/1, framerate=30/1 \
! comp.


// webcam into screencast to file WEBM <- COMPOSITOR & queue2
gst-launch-1.0  --gst-debug=3 \
compositor name=comp \
! queue2 \
! videoconvert \
! vp8enc  min_quantizer=10 max_quantizer=10 cpu-used=2 deadline=1000000  threads=2 \
! mux. pulsesrc \
! queue2 \
! audioconvert \
! vorbisenc \
! mux. webmmux name=mux \
! filesink location=screencast.webm ximagesrc \
! comp. v4l2src \
! queue2 \
! video/x-raw,format=YUY2,width=640, height=480, interlaced=false, pixel-aspect-ratio=1/1, framerate=30/1 \
! comp.


// webcam into screencast to file WEBM <- new composition
gst-launch-1.0  --gst-debug=3 \
compositor name=comp \
! queue \
! videoconvert \
! videorate \
! vp8enc  min_quantizer=13 max_quantizer=13 cpu-used=2 deadline=1000000  threads=2 \
! mux. pulsesrc \
! queue \
! audioconvert \
! vorbisenc \
! mux. webmmux name=mux \
! filesink location=screencast.webm ximagesrc \
! queue \
! comp. v4l2src \
! video/x-raw,format=YUY2,width=640, height=480, interlaced=false, pixel-aspect-ratio=1/1, framerate=30/1 \
! comp.





! videoscale ! video/x-raw-rgb,width=640,height=480,framerate=10/1 !


gst-launch-0.10 v4l2src ! videorate ! videoscale ! x264enc ! tee name=videoTee \
pulsesrc ! ffenc_aac ! tee name=audioTee \
flvmux name=flvMux ! filesink location=/tmp/foo.flv \
matroskamux name=mkvMux ! filesink location=/tmp/foo.mkv \
audioTee. ! queue ! flvMux. \
audioTee. ! queue ! mkvMux. \
videoTee. ! queue ! flvMux. \
videoTee. ! queue ! mkvMux.


Grab the X video image (the desktop)
Automatically convert the video to an acceptable format
Spawn a background thread [t1] to continue video processing
[t1] Encode the video (either to vp8 or theora)
[t1] Prep for merging the video into the video shell (webm or ogg)
Grab the audio input as raw (the microphone)
Spawn a background thread [t2] to continue audio processing
[t2] Automatically convert the audio to an acceptable format
[t2] Encode the audio to vorbis
[t2] Prep for merging the audio into the video shell (webm or ogg)
Write encoded audio and video into the video file


gst-launch oggmux name=mux ! filesink location=output.ogg { v4lsrc ! tee name=t ! {queue ! ffmpegcolorspace ! theoraenc ! queue ! mux. } } { alsasrc ! audioconvert ! rawvorbisenc ! queue ! mux. } { t. ! queue ! ffmpegcolorspace ! sdlvideosink }

gst-launch-1.0 v4l2src device=/dev/video1 ! videorate  ! 'image/jpeg,framerate=30/1,width=1920,height=1080' ! jpegparse ! avimux name=muxer ! filesink location=/home/sina/Desktop/Recordings/video.avi v4l2src device=/dev/video0 ! 'video/x-raw, framerate=24/1, width=1024, height=768' ! x264enc ! mpegtsmux ! filesink location=/home/sina/Desktop/Recordings/Screen.ts  -v



//ONLY DESKTOP RECORDING
gst-launch-1.0  --gst-debug=3 \
ximagesrc \
! videoconvert \
! videorate \
! vp8enc min_quantizer=13 max_quantizer=13 cpu-used=5 deadline=1000000 threads=5  \
! webmmux name=mux \
! filesink location=screencast.webm


//ONLY DESKTOP RECORDING WITH WEBCAM - no sound
gst-launch-1.0  --gst-debug=3 \
ximagesrc \
! videoconvert \
! videorate \
! vp8enc min_quantizer=13 max_quantizer=13 cpu-used=5 deadline=1000000 threads=5  \
compositor name=comp \
v4l2src \
! video/x-raw,format=YUY2,width=640, height=480, interlaced=false, pixel-aspect-ratio=1/1, framerate=30/1 \
! comp.



//test tee version
gst-launch-1.0  --gst-debug=3 \
ximagesrc \
! videoconvert \
! videorate \
! vp8enc min_quantizer=13 max_quantizer=13 cpu-used=5 deadline=1000000 threads=5  \
compositor name=comp v4l2src \
! videoconvert \
! videoscale \
! video/x-raw,format=YUY2,width=640, height=480, interlaced=false, pixel-aspect-ratio=1/1, framerate=30/1 \
! comp.    pulsesrc \
! audioconvert \
! vorbisenc \
! webmmux name=mux \
! filesink location=screencast.webm




//good example tee usage
gst-launch-1.0 v4l2src \
! videorate \
! videoscale \
! x264enc \
! tee name=videoTee     pulsesrc \
!  tee name=audioTee     flvmux name=flvMux \
! filesink location=/tmp/foo.flv     matroskamux name=mkvMux \
! filesink location=/tmp/foo.mkv     audioTee. \
! queue \
! flvMux.     audioTee. \
! queue \
! mkvMux.     videoTee. \
! queue \
! flvMux.     videoTee. \
! queue \
! mkvMux.



gst-launch -vv \
v4l2src device=/dev/video0 name=upper_right_video \
! videoscale \
! ffmpegcolorspace \
! videomixer.mymix.sink_0. \
v4l2src device=/dev/video1 name=upper_left_video \
! videoscale \
! ffmpegcolorspace \
! videomixer.mymix.sink_1. \
videomixer name=mymix \
sink_0::xpos=1 sink_0::ypos=0 sink_0::zorder=0 \
sink_1::xpos=640 sink_1::ypos=0 sink_1::zorder=1 \
! ffmpegcolorspace \
! videoscale \
! xvimagesink mymix.



gst-launch v4l2src device=/dev/video1 ! videobox left=-1 ! videomixer name=mix ! ffmpegcolorspace ! xvimagesink mix. v4l2src device=/dev/video0 ! videoscale ! videobox left=-640 ! mix.


gst-launch -v filesrc location=ch2.avi ! decodebin ! videoscale ! video/x-raw-yuv,width=720,height=480 ! videobox left=-720 top=-480 border-alpha=0 ! videomixer name=right ! videomixer name=three ! videomixer name=all ! alpha ! ffmpegcolorspace ! theoraenc ! oggmux ! filesink location=all.ogv filesrc location=ch1.avi ! decodebin ! videoscale ! video/x-raw-yuv,width=720,height=480 ! videobox border-alpha=0.0 left=-720 ! alpha ! ffmpegcolorspace ! all. filesrc location=ch4.avi ! decodebin ! videoscale ! video/x-raw-yuv,width=720,height=480 ! videobox border-alpha=0.0 top=-480 ! alpha ! ffmpegcolorspace ! three. filesrc location=ch3.avi ! decodebin ! videoscale ! video/x-raw-yuv,width=720,height=480 ! alpha ! ffmpegcolorspace ! right.




gst-launch -v \
filesrc location=video1.avi ! avidemux name=demux1 \
filesrc location=video2.avi ! avidemux name=demux2 \
videomixer name=mix \
sink_0::xpos=0   sink_0::ypos=0 sink_0::alpha=0 \
sink_1::xpos=0   sink_1::ypos=0 \
sink_2::xpos=320 sink_2::ypos=0 \
! xvimagesink \
videotestsrc pattern="black" \
! video/x-raw-yuv,width=640,height=240 \
! mix.sink_0 \
demux1.video_00 \
! queue ! decodebin ! ffmpegcolorspace ! videoscale \
! video/x-raw-yuv,width=320,height=240 \
! mix.sink_1 \
demux2.video_00 \
! queue ! decodebin ! ffmpegcolorspace ! videoscale \
! video/x-raw-yuv,width=320,height=240 \
! mix.sink_2 \






















#################

gst 0.1

#################


//test video
gst-launch-0.10 videotestsrc ! video/x-raw-rgb, framerate=25/1, width=640, height=360 ! ximagesink

//test pip
gst-launch-0.10 -e videotestsrc pattern="snow" ! video/x-raw-yuv, framerate=10/1, width=200, height=150 ! videomixer name=mix ! ffmpegcolorspace ! xvimagesink videotestsrc ! video/x-raw-yuv, framerate=10/1, width=640, height=360 ! mix.

//test pip2
gst-launch-0.10 videotestsrc pattern="snow" ! video/x-raw-yuv, framerate=10/1, width=200, height=150 ! videomixer name=mix sink_1::xpos=20 sink_1::ypos=20 sink_1::alpha=0.5 sink_1::zorder=3 sink_2::xpos=100 sink_2::ypos=100 sink_2::zorder=2 ! ffmpegcolorspace ! xvimagesink videotestsrc pattern=13 ! video/x-raw-yuv, framerate=10/1, width=200, height=150 ! mix. videotestsrc ! video/x-raw-yuv, framerate=10/1, width=640, height=360 ! mix.

//test pip3
gst-launch-0.10 videomixer name=mix sink_1::xpos=20 sink_1::ypos=20 sink_1::alpha=0.5 sink_1::zorder=3 sink_2::xpos=100 sink_2::ypos=100 sink_2::zorder=2 ! ffmpegcolorspace ! xvimagesink videotestsrc ! video/x-raw-yuv, framerate=10/1, width=640, height=360 ! mix.sink_0 videotestsrc pattern="snow" ! video/x-raw-yuv, framerate=10/1, width=200, height=150 ! mix.sink_1 videotestsrc pattern=13 ! video/x-raw-yuv, framerate=10/1, width=200, height=150 ! mix.sink_2

//test videobox border
gst-launch-0.10 -e videotestsrc pattern="snow" ! video/x-raw-yuv, framerate=10/1, width=200, height=150 ! videobox border-alpha=0 top=-20 left=-25 ! videomixer name=mix ! ffmpegcolorspace ! xvimagesink videotestsrc ! video/x-raw-yuv, framerate=10/1, width=640, height=360 ! mix.

//test videobox 2 content semitrasparent
gst-launch-0.10 -e videotestsrc pattern="snow" ! video/x-raw-yuv, framerate=10/1, width=200, height=150 ! videobox border-alpha=0 alpha=0.6 top=-20 left=-25 ! videomixer name=mix ! ffmpegcolorspace ! xvimagesink videotestsrc ! video/x-raw-yuv, framerate=10/1, width=640, height=360 ! mix.

//test video box 3 border with border
gst-launch-0.10 -e videotestsrc pattern="snow" ! video/x-raw-yuv, framerate=10/1, width=200, height=150 ! videobox border-alpha=1.0 top=-2 bottom=-2 left=-2 right=-2 ! videobox border-alpha=0 alpha=0.6 top=-20 left=-25 ! videomixer name=mix ! ffmpegcolorspace ! xvimagesink videotestsrc ! video/x-raw-yuv, framerate=10/1, width=640, height=360 ! mix.

//test 4 five streams
gst-launch-0.10 -e videomixer name=mix ! ffmpegcolorspace ! xvimagesink videotestsrc pattern=1 ! video/x-raw-yuv, framerate=5/1, width=320, height=180 ! videobox border-alpha=0 top=0 left=0 ! mix. videotestsrc pattern=15 ! video/x-raw-yuv, framerate=5/1, width=320, height=180 ! videobox border-alpha=0 top=0 left=-320 ! mix. videotestsrc pattern=13 ! video/x-raw-yuv, framerate=5/1, width=320, height=180 ! videobox border-alpha=0 top=-180 left=0 ! mix. videotestsrc pattern=0 ! video/x-raw-yuv, framerate=5/1, width=320, height=180 ! videobox border-alpha=0 top=-180 left=-320 ! mix. videotestsrc pattern=3 ! video/x-raw-yuv, framerate=5/1, width=640, height=360 ! mix.



//text overlay
gst-launch-0.10 videotestsrc ! timeoverlay ! xvimagesink

//text overlay 2
gst-launch-0.10 -v videotestsrc ! video/x-raw-yuv, framerate=25/1, width=640, height=360 ! timeoverlay halign=left valign=bottom text="Stream time:" shaded-background=true ! xvimagesink

//text overlay 3
gst-launch-0.10 videotestsrc ! clockoverlay ! xvimagesink

//text overlay 4
gst-launch-0.10 videotestsrc ! clockoverlay halign=right valign=bottom shaded-background=true time-format="%Y.%m.%D" ! ffmpegcolorspace ! ximagesink




//webcam 
gst-launch-0.10 v4l2src ! xvimagesink

//webcam 2
gst-launch-0.10 v4l2src ! videorate ! video/x-raw-yuv,width=320,height=240,framerate=20/1 ! xvimagesink

//webcam 3
gst-launch-0.10 v4l2src ! videorate ! video/x-raw-yuv, format=\(fourcc\)YUY2, width=160, height=120, interlaced=false, pixel-aspect-ratio=1/1, framerate=30/1 ! xvimagesink

//webcam 4
gst-launch-0.10 v4l2src ! videorate ! video/x-raw-yuv,width=320,height=240,framerate=20/1 ! aspectratiocrop aspect-ratio=16/9 ! ffmpegcolorspace ! xvimagesink

//webcam 5
gst-launch-0.10 v4l2src ! video/x-raw-yuv, format=\(fourcc\)YUY2, width=160, height=120, interlaced=false, pixel-aspect-ratio=1/1, framerate=30/1 ! aspectratiocrop aspect-ratio=16/9 ! ffmpegcolorspace ! xvimagesink



//webcam into test pattern
gst-launch-0.10 -e v4l2src ! videorate ! video/x-raw-yuv, format=\(fourcc\)YUY2, width=160, height=120, interlaced=false, pixel-aspect-ratio=1/1, framerate=30/1 ! ffmpegcolorspace ! videomixer name=mix ! xvimagesink videotestsrc ! video/x-raw-yuv, framerate=10/1, width=640, height=360 ! mix.
